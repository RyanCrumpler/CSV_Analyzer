__author__ = 'Ryan'

"""
The point of this program is to analyze a csv file and print out the number of columns and rows, print the header
names and gives the row number and column header of any blank data.
"""

import csv

r = open('football.csv', 'rt')

try:
    reader = csv.reader(r)
    empty_columns = {}                              #Create empty dictionary - this will keep track of how many empty cells there are

    for row in reader:                      #Cycles through each row

        if reader.line_num == 1:            #If the first row is being read, it saves the headers in the header list
            header = row
            tick = 0

            for info in row:                #Populate dictionary with names of headers and default values to 0
                empty_columns[header[tick]] = 0
                tick = tick + 1

        else:
            tick = 0                        #tick keeps track of what column is being cycled through

            for info in row:                #Each cell is cycled through and can go through further analysis in this loop

                #print(info)                #Print all information
                if info == '':
                    #print('Row', reader.line_num, 'Column', header[tick], "holds blank information")
                    empty_columns[header[tick]] = empty_columns[header[tick]] + 1       #If cell is empty, add 1 to the dictionary value
                tick = tick + 1

    print(len(header), "total columns")     #Print the number of columns in the first row (assuming this is the headers)
    print("Column titles", header)          #Print the names of the headers
    print(reader.line_num - 1, "records")       #Print the number of columns excluding the header

    tick = 0

    for info in row:
        if empty_columns[header[tick]] != 0:
            print('Column:', header[tick], '-', round((100 - ((empty_columns[header[tick]]) / (reader.line_num - 1)) * 100), 2), '% complete')
        tick = tick + 1                     #Print the column header and the % that is complete

    #print(empty)

finally:
    r.close()
